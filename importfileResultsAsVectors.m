function [beta1,connection_ub,throughput_ub,obj_ub,connection_lb,throughput_lb,obj_lb,connection_he,throughput_he,obj_he] = importfileResultsAsVectors(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [BETA1,CONNECTION_UB,THROUGHPUT_UB,OBJ_UB,CONNECTION_LB,THROUGHPUT_LB,OBJ_LB,CONNECTION_HE,THROUGHPUT_HE,OBJ_HE]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [BETA1,CONNECTION_UB,THROUGHPUT_UB,OBJ_UB,CONNECTION_LB,THROUGHPUT_LB,OBJ_LB,CONNECTION_HE,THROUGHPUT_HE,OBJ_HE]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [beta1,connection_ub,throughput_ub,obj_ub,connection_lb,throughput_lb,obj_lb,connection_he,throughput_he,obj_he] = importfile('result_A1_0.csv',2, 23);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/12/07 10:55:57

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
beta1 = dataArray{:, 1};
connection_ub = dataArray{:, 2};
throughput_ub = dataArray{:, 3};
obj_ub = dataArray{:, 4};
connection_lb = dataArray{:, 5};
throughput_lb = dataArray{:, 6};
obj_lb = dataArray{:, 7};
connection_he = dataArray{:, 8};
throughput_he = dataArray{:, 9};
obj_he = dataArray{:, 10};


